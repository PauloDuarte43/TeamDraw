<template>
  <div id="app">
    <h1>Sorteio de Equipes</h1>
    <textarea v-model="inputText" placeholder="Insira a lista de jogadores"></textarea>
    <select v-model="numTeams">
      <option v-for="n in 10" :key="n" :value="n">{{ n }} Equipes</option>
    </select>
    <button @click="sortear">Sortear Equipes</button>
    <div v-if="teams.length" class="teams-container">
      <div v-for="(team, index) in teams" :key="index" class="team">
        <h2>Equipe {{ index + 1 }}</h2>
        <ul>
          <li v-for="player in team" :key="player">{{ player }}</li>
        </ul>
      </div>
    </div>
  </div>
</template>

<script>
export default {
  data() {
    return {
      inputText: localStorage.getItem('inputText') || '',
      numTeams: 2,
      teams: []
    }
  },
  watch: {
    inputText(newValue) {
      localStorage.setItem('inputText', newValue);
    }
  },
  methods: {
    sortear() {
      const players = this.extractPlayers(this.inputText);
      this.teams = this.shufflePlayersIntoTeams(players, this.numTeams);
    },
    extractPlayers(text) {
      const lines = text.split('\n');
      let players = [];
      const regex = /^\d+\s*[-.\s]\s*(.+)$/;
      const sequentialLines = lines.filter(line => regex.test(line));

      if (sequentialLines.length > 0) {
        players = sequentialLines.map(line => line.match(regex)[1].trim());
      } else {
        players = lines.filter(line => line.trim() !== '').map(line => line.trim());
      }

      return players;
    },
    shufflePlayersIntoTeams(players, numTeams) {
      // Embaralhar jogadores
      for (let i = players.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [players[i], players[j]] = [players[j], players[i]];
      }

      // Distribuir jogadores em equipes
      const teams = Array.from({ length: numTeams }, () => []);
      players.forEach((player, index) => {
        teams[index % numTeams].push(player);
      });

      return teams;
    }
  }
}
</script>

<style scoped>
#app {
  max-width: 800px;
  margin: auto;
  padding: 20px;
  background-color: #f9f9f9;
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  font-family: 'Arial, sans-serif';
}

h1 {
  text-align: center;
  color: #333;
}

textarea {
  width: 100%;
  height: 150px;
  margin-bottom: 20px;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  font-size: 16px;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
}

select {
  display: block;
  width: 100%;
  padding: 10px;
  margin-bottom: 20px;
  border: 1px solid #ccc;
  border-radius: 5px;
  font-size: 16px;
  background-color: #fff;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
}

button {
  display: block;
  width: 100%;
  padding: 10px;
  background-color: #007BFF;
  color: #fff;
  border: none;
  border-radius: 5px;
  font-size: 16px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

button:hover {
  background-color: #0056b3;
}

.teams-container {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
}

.team {
  flex: 1 1 calc(50% - 20px);
  background-color: #fff;
  padding: 10px;
  border-radius: 5px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

h2 {
  color: #007BFF;
}

ul {
  list-style: none;
  padding: 0;
}

li {
  background-color: #f1f1f1;
  padding: 5px;
  border-radius: 3px;
  margin-bottom: 5px;
}
</style>
